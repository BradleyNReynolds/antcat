#!/usr/bin/ruby

# This is used to repair two kinds of errors in the output file generated by the
# rake task that generates output for antweb. One is to remote double quotes from the
# "oountry" row, and another is to remove crlfs from the output file that were breaking lines.
# Normally I'd not do this in a post-process step, but this is time sensitive; I don't know
# the code for output, and some of the fixes are potentially deep.
# So my apologies if you're reading this in 2016 and we're still doing this stupid shit.

file=ARGV.first
#puts "processing file: " + file.to_s
$line_number = 0
$line_cache = []
$prev_line=nil
$broken = false

def strip_quotes line
  array_line = line.split("\t")
  return_line=''
  unless array_line[20].nil?
    array_line[20].delete!('\"')
    #array_line[20].gsub! /"/, '&quot;'
  end

  array_line.each do |column|
    if (return_line.length != 0)
      return_line = return_line + "\t"
    end

    return_line = return_line + column
  end

  return_line
end

def print_previous_line
  if $prev_line.nil?
    return
  end

  line_to_print = ''
  if $broken
    # If this is true, the previous line is actually an array. Print it.
    $line_cache.each do |cached_line|
      line_to_print = line_to_print + cached_line.delete("\n");
    end
    puts strip_quotes line_to_print
    $line_cache=[]
    $broken = false
  else
    # Not true, print the previous line that doesn't happen to be an array
    puts strip_quotes $prev_line
  end
end

File.readlines(file).each do |line|
  $line_number = $line_number + 1
  if !/^([0-9]+\t)/.match(line) && $line_number != 1
    # We got a non-matching line (doesn't start with digit - tab)
    $broken = true
    $line_cache.concat([$prev_line])
  else
    # We got a matching line. Print the previous line
    print_previous_line

    $prev_line = line
  end

end

# end case
print_previous_line





