grammar AuthorGrammar
  include CommonGrammar

  rule author_names
    (author (author_separator space author)* suffix? space) {
      {:names => captures[:author].map(&:to_s), :suffix => suffix}
    }
  end

  rule author
    !suffix phrase (',' initial+)? author_suffix?
  end

  rule author_suffix
    (', Jr' '.'?) | ', II'
  end

  rule author_separator
    ';' | ','
  end

  rule initial
    space ('dos' | 'da' | 'de' | 'di' | 'del' | 'do') |
    space word_char '.'? '-' word_char '.' |
    space word_char '.' |
    space word_char_without_period_but_before_semicolon
  end

  rule suffix
    et_al role | et_al | role
  end

  rule role
    space '(' [^)]+ ')'
  end

  rule et_al
    ', '? space 'et al.'
  end

  rule phrase
    word (space word)*
  end

  rule word
    word_char+ '.'?
  end

  rule word_char
    /[\-\'\w]/u
  end

  rule word_char_without_period_but_before_semicolon
    /[\-\'\w](?=;)/u
  end
end
