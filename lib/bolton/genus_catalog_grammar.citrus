grammar Bolton::GenusCatalogGrammar
  include CommonGrammar
  include Bolton::CatalogGrammar

  rule record
    header | blank_line | section_header | section_detail | not_understood
  end

  rule section_header
    synonym | homonym | unresolved_homonym_and_synonym | collective_group_name | other | unresolved_homonym
  end

  rule other
    (subgenus_prefix? fossil_flag? genus bracketed_information) {
      value = genus.value
      value.merge! :fossil => true if fossil_flag.present?
      value.merge! bracketed_information.value
      value
    }
  end

  rule subgenus_prefix
    black? subgenus_flag tag_end?
  end

  rule synonym
    (
      italic?
      main_fossil_flag:fossil_flag?
      (
        (black italic name tag_end tag_end) |
        (italic black name tag_end tag_end) |
        (italic name tag_end) |
        (name tag_end) |
        (black name tag_end)
      )
      tag_end?
      s '[' junior_synonym_of fossil_flag? italic capitalized_word tag_end? span? ']' tag_end?
    ) {
      value = {:type => :genus, :name => name.value, :status => :synonym, :synonym_of => capitalized_word.value}
      value.merge! :fossil => true if main_fossil_flag && main_fossil_flag != ''
      value
    }
  end

  rule junior_synonym_of
    /[Jj]unior (synonym|syonym) of /
  end

  rule homonym
    (main_fossil_flag:fossil_flag? italic name tag_end span? ' [junior homonym, see ' tag_end? fossil_flag? italic capitalized_word tag_end span? ']' tag_end?) {
      value = {:type => :genus, :name => name.value, :status => :homonym, :homonym_resolved_to => capitalized_word.value}
      value.merge! :fossil => true if main_fossil_flag && main_fossil_flag != ''
      value
    }
  end

  rule unresolved_homonym_and_synonym
    (italic name s tag_end s '[junior homonym, junior synonym of ' italic capitalized_word tag_end ']') {
      {:type => :genus, :name => name.value, :status => :unresolved_homonym_and_synonym, :synonym_of => capitalized_word.value}
    }
  end

  rule unresolved_homonym
    (fossil_flag? bold italic brown name tag_end tag_end tag_end bracketed_information) {
      value = {:type => :genus, :name => name.value, :status => :unresolved_homonym}
      value.merge! bracketed_information.value
      value.merge! :fossil => true if fossil_flag.present?
      value
    }
  end

  rule genus
    unavailable | valid | subgenus | unidentifiable
  end

  rule valid
    (bold italic red name tag_end tag_end tag_end) {
      {:type => :genus, :name => name.value, :status => :valid}
    }
  end

  rule unavailable
    (italic purple name tag_end s tag_end) {
      {:type => :genus, :name => name.value, :status => :unavailable}
    }
  end

  rule unidentifiable
    (bold italic green name tag_end tag_end tag_end) {
      {:type => :genus, :name => name.value, :status => :unidentifiable}
    }
  end

  rule subgenus
    (bold? italic blue? name tag_end tag_end? tag_end? errant_blue_space?) {
      {:type => :subgenus, :name => name.value, :status => :valid}
    }
  end

  rule name
    (uppercase_word s) {
      downcase.capitalize.strip
    }
  end

  rule bracketed_information
    (s open_bracket bracketed_contents parenthetical_note? close_bracket tag_end?) {
      bracketed_contents.value
    }
  end

  rule parenthetical_note
    ' ' parenthesized_phrase
  end

  rule open_bracket
    '(' | '['
  end

  rule close_bracket
    ')' | ']'
  end

  rule bracketed_contents
    subgenus_of | uncertain_in_family | subfamily_and_tribe | unavailable_name | any_bracketed_contents
  end

  rule subgenus_of
    ('subgenus of ' italic capitalized_word tag_end) {
      {:genus => capitalized_word.value}
    }
  end

  rule uncertain_in_family
    (incertae_sedis_in 'Formicidae') {
      {:incertae_sedis_in => :family}
    }
  end

  rule subfamily_and_tribe
    (uncertain:incertae_sedis_in? subfamily (': ' incertae_sedis_in? tribe)?) {
      value = {:subfamily => subfamily.value}
      if !tribe.blank?
        value[:tribe] = tribe.value
        value[:incertae_sedis_in] = :tribe if uncertain && uncertain != '' || incertae_sedis_in.present?
      elsif uncertain && uncertain != ''
        value[:incertae_sedis_in] = :subfamily
      end
      value
    }
  end

  rule incertae_sedis_in
    italic 'incertae sedis' tag_end ' in '
  end

  rule unavailable_name
    (bold 'unavailable name' tag_end?) {
      {}
    }
  end

  rule any_bracketed_contents
    /[^\]]*/ {
      {}
    }
  end

  rule tribe
    subfamily_or_tribe
  end

  rule subfamily
    subfamily_or_tribe
  end

  rule subfamily_or_tribe
    (fossil_flag? capitalized_word question_mark?) {
      capitalized_word.to_s
     }
  end

  rule section_detail
    (
      (s (tag_start | /\W/)* /[[:upper:]][[:lower:]].*/) |
      (s /\[.*?\]/)
    ) {
      {:type => :section_detail}
    }
  end

  rule collective_group_name
    /.*?\[.*collective group name\]/ {
      {:type => :collective_group_name}
    }
  end

end
