-references ||= nil
-reference ||= nil
-css_class = "antcat_reference_#{picker_type}"

.antcat_reference_picker.antcat_panel{class: css_class}
  .template
    =render "reference_#{picker_type}s/panel", reference: Reference.new

  .display
    -if picker_type == 'field'
      %button.display_button
        =reference && reference.id ? reference.decorate.formatted : '(none)'

  .edit
    %table.references.current
      %tr
        %td
          =render "reference_#{picker_type}s/panel", reference: reference

    .expansion.nested_form
      %table
        %tr
          %td.throbber=shared_spinner_icon
          %td.controls
            =hidden_field_tag 'reference_picker_id', reference.try(:id)

            .ok_cancel_controls
              %button.ok.btn-normal OK
              %button.close.btn-cancel Cancel

            .default_reference_controls
              =render partial: 'default_references/default_reference'

            .search_controls
              =text_field_tag 'q', params[:q], class: 'search_controls q'
              %button.search_controls.go.btn-search Go
            =will_paginate references if references
            .help_banner
              %span.help_banner_text

      -if references && (references.first != reference || references.size != 1 || params[:q].present?)
        -if references.empty?
          .no_results_found No results found
        %table.references.search_results
          -references.each do |reference|
            %tr
              %td=render "reference_#{picker_type}s/panel", reference: reference
