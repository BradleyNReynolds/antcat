-# TODO: Remove after fixing `SubgeneraWithSameNameAsAGenus`.
-if DatabaseScripts::SubgeneraWithSameNameAsAGenus.record_in_results?(taxon)
  .soft-validations-callout.callout.alert.margin-bottom
    %h6
      Subgenus warning
      =logged_in_only_tooltip_icon
    -same_named_taxon = DatabaseScripts::SubgeneraWithSameNameAsAGenus.same_named_taxa(taxon).first
    %p
      A
      =same_named_taxon.rank
      with the same name as this taxon but different protonym exists (only comparing subgenus part of name).
    %p
      One of them is probably not correct, probably
      -if taxon.is_a?(Genus)
        %strong this taxon
        (the genus).
      -else
        %strong the other taxon
        (the genus).
    %p
      Link to other taxon:
      =same_named_taxon.decorate.link_to_taxon_with_author_citation
    %p
      Database script:
      =link_to 'Subgenera with same name as a genus', database_script_path(DatabaseScripts::SubgeneraWithSameNameAsAGenus.new)

-# TODO: Remove once fixed (see `Taxon#obsolete_combination_that_is_shady?`).
-if taxon.obsolete_combination_that_is_shady?
  -synonym_history_item = taxon.current_valid_taxon.synonyms_history_items_containing_taxon(taxon)
  -if synonym_history_item.present?
    .soft-validations-callout.callout.alert.margin-bottom
      %h6
        This taxon should probably have the status 'synonym'
        =logged_in_only_tooltip_icon
      %small.bold-warning [this record is shady, but it can be ignored for now while we're figuring out the correct data model]
      The status of this taxon is 'original combination' but
      it appears in a
      synonyms list history item of
      =taxon.current_valid_taxon.link_to_taxon
      %hr
      =Detax[synonym_history_item.taxt]

  -synonym_history_item = taxon.current_valid_taxon.synonyms_history_items_containing_taxons_protonyms_taxa_except_self(taxon)
  -if synonym_history_item.present?
    .soft-validations-callout.callout.alert.margin-bottom
      %h6
        The
        %code current_valid_taxon
        of this taxon should probably be changed
        =logged_in_only_tooltip_icon
      %small.bold-warning [this record is shady, but it can be ignored for now while we're figuring out the correct data model]
      The status of this taxon is 'original combination' but
      a representation of this taxon except itself (another taxon belonging to the same protonym) appears in a
      synonyms list history item of
      =taxon.current_valid_taxon.link_to_taxon
      %hr
      =Detax[synonym_history_item.taxt]

-# Ignore "Issue" sidebar for Formicidae for performance and a cleaner look.
-if Settings.catalog.show_failed_soft_validations && !taxon.is_a?(Family)
  -if taxon.soft_validations.failed?
    .soft-validations-callout.callout.warning
      %h6
        Issues (#{link_to("see more", taxon_soft_validations_path(taxon))})
        =logged_in_only_tooltip_icon
      =render 'shared/failed_soft_validations', soft_validations: taxon.soft_validations

  -if taxon.protonym.soft_validations.failed?
    .soft-validations-callout.callout.warning
      %h6
        =link_to 'Protonym issues', protonym_soft_validations_path(taxon.protonym)
        =logged_in_only_tooltip_icon
      %p
        These issues listed here are for the protonym of this taxon,
        =succeed '.' do
          =taxon.protonym.decorate.link_to_protonym
      =render 'shared/failed_soft_validations', soft_validations: taxon.protonym.soft_validations

-# TODO: *Very* beta.
-if taxon.combination_in_according_to_history_items.present?
  .additional-editor-data.callout.no-border-callout.logged-in-only-background.margin-bottom
    %h6
      'Combination in' according to history items
      =beta_label
      =logged_in_only_tooltip_icon "This section is only shown to logged-in users. It is very beta but it has a lot of potential. The check for obsolete combinations representing the current catalog taxon is only run if the catalog taxon is a species, and if the history item says it was combined in a genus. The 'original combination event' does usually not appear in history items, so missing original combinations will usually not appear here. The 'create?' link is only visible when the system allows it."
    %ul.no-bullet.spaced-lis.small-margin-bottom
      -taxon.combination_in_according_to_history_items.with_common_includes.each do |oc_per_item|
        %li
          =oc_per_item.link_to_taxon
          =oc_per_item.author_citation
          -if oc_per_item.is_a?(Genus) && taxon.is_a?(Species)
            %br
            -if taxon.genus == oc_per_item
              =antcat_icon 'check'
              Current combination
              =dash
              this page
            -else
              -# TODO: This depends on `belongs_to :genus` being defined in `Taxon`, which we don't want.
              -obsolete_combinations_in_genus = taxon.obsolete_combinations.where(genus: oc_per_item)
              -if obsolete_combinations_in_genus.present?
                %ul.no-bullet
                  -obsolete_combinations_in_genus.each do |obsolete_combination_in_genus|
                    %li
                      =antcat_icon 'check'
                      =obsolete_combination_in_genus.link_to_taxon
              -else
                =antcat_icon 'nope'
                No obsolete combinations.
                -if taxon.policy.allow_create_obsolete_combination?
                  =link_to "Create?", taxa_create_obsolete_combination_path(taxon, obsolete_genus_id: oc_per_item)

-# TODO: Remove after `MoveTypeTaxonToProtonymByScript`.
-if !taxon.is_a?(Family) && taxon.type_taxon
  -type_taxon_expander = TypeTaxonExpander.new(taxon)
  -unless type_taxon_expander.can_expand?
    .additional-editor-data.callout.no-border-callout.logged-in-only-background.margin-top.margin-bottom
      %h6
        =antcat_icon 'nope'
        Type taxon expansion
        =logged_in_only_tooltip_icon
      %p
        See
        =link_to 'this database script', database_script_path(DatabaseScripts::TaxaWithUncommonTypeTaxts.new)
        and
        =link_to 'this database script (slow)', database_script_path(DatabaseScripts::TaxaWithTypeTaxa.new)
        for more info.
      %p
        This taxon has a type taxon
        but it could not be expanded because:
        %br
        =type_taxon_expander.reason_cannot_expand
        %br
        The default expansion is:
        =type_taxon_expander.expansion(ignore_can_expand: true)

-if editors_catalog_presenter.taxa_with_same_name.present?
  .additional-editor-data.callout.no-border-callout.logged-in-only-background
    %h6
      Taxa with same name
      =logged_in_only_tooltip_icon
    %ul.compact-list.small-margin-bottom
      -editors_catalog_presenter.taxa_with_same_name.includes(:name, protonym: [{ authorship: :reference }]).each do |homonym|
        %li
          =homonym.link_to_taxon
          =homonym.author_citation
          %span.small-text=homonym.compact_status

-if taxon.policy.show_create_combination_button?
  .additional-editor-data.callout.no-border-callout.logged-in-only-background
    %h6
      Can be combined?
      =logged_in_only_tooltip_icon

    -policy = CreateCombinationPolicy.new(taxon)
    -if policy.allowed?
      %p
        Probably!
        =link_to "Create combination", new_taxa_create_combination_path(taxon), class: "btn-normal btn-tiny"
    -else
      No, because:
      %ul
        -policy.errors.each do |error|
          %li=error
      See also this issue on GitHub
      =link_to '#808.', 'https://github.com/calacademy-research/antcat/issues/808'

.additional-editor-data.callout.no-border-callout.logged-in-only-background
  %h6
    Additional data for editors
    =logged_in_only_tooltip_icon

  %ul
    %li Rank and status: #{taxon.rank}, #{taxon.status}
    -if taxon.original_combination?
      %li
        Original combination
        =antcat_icon 'check'
    -if taxon.auto_generated?
      %li
        Auto-generated
        =antcat_icon 'check'
    -if taxon.origin
      %li.bold-warning Origin: #{taxon.origin}
    %li Created at: #{l taxon.created_at, format: :ymd}
    %li Updated at: #{l taxon.updated_at, format: :ymd}

  -# Show name to make it easier to spot inconsistent names, since `Taxa::LinkEachEpithet` uses parents' name parts.
  -# Only show for species and below since this has only been an issue with these.
  -# TODO: Remove once we have made sure this does not happen (when we stop recreating deleted records, mostly).
  -if taxon.is_a?(SpeciesGroupTaxon)
    %ul
      %li
        Name (from name record):
        =link_to taxon.name.name_html, name_path(taxon.name)

  -# Show parents to make it easier to spot inconsistent records, since the breadcrumb shows the parent of the parent of the parent...
  %ul
    -if taxon.is_a?(Species)
      %li
        Subgenus:
        -if taxon.subgenus
          =taxon.subgenus.link_to_taxon
        -else
          (none)
          =link_to "Set subgenus", taxa_set_subgenus_path(taxon), class: "btn-normal btn-very-tiny"
    -if taxon.is_a?(SpeciesGroupTaxon)
      %li Genus: #{taxon.genus.link_to_taxon}
    -if taxon.is_a?(Subspecies) || taxon.is_a?(Infrasubspecies)
      %li Species: #{taxon.species.link_to_taxon}
    -if taxon.is_a?(Infrasubspecies)
      %li Subspecies: #{taxon.subspecies.link_to_taxon}
